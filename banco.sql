drop database bibliografia;
-- MySQL Script generated by MySQL Workbench
-- seg 25 nov 2019 02:34:24 -03
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema bibliografia
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema bibliografia
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `bibliografia` DEFAULT CHARACTER SET utf8 ;
USE `bibliografia` ;

-- -----------------------------------------------------
-- Table `bibliografia`.`pais`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliografia`.`pais` (
  `id` INT NOT NULL,
  `nome` VARCHAR(60) NOT NULL,
  `nome_pt` VARCHAR(60) NOT NULL,
  `sigla` VARCHAR(2) NOT NULL,
  `bancen` INT(15) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliografia`.`estado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliografia`.`estado` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(75) NOT NULL,
  `uf` VARCHAR(2) NOT NULL,
  `ibge` INT(2) NOT NULL,
  `pais` INT NOT NULL,
  `ddd` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_estados_paises1_idx` (`pais` ASC),
  CONSTRAINT `fk_estados_paises1`
    FOREIGN KEY (`pais`)
    REFERENCES `bibliografia`.`pais` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliografia`.`cidade`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliografia`.`cidade` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NOT NULL,
  `iduf` INT NOT NULL,
  `ibge` INT(7) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_cidade_estados1_idx` (`iduf` ASC),
  CONSTRAINT `fk_cidade_estados1`
    FOREIGN KEY (`iduf`)
    REFERENCES `bibliografia`.`estado` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliografia`.`filme`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliografia`.`filme` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `titulo` VARCHAR(50) NOT NULL,
  `popularidade` VARCHAR(45) NOT NULL,
  `data_lancamento` DATE NOT NULL,
  `diretorio_poster` VARCHAR(100) NOT NULL,
  `descricao` VARCHAR(100) NOT NULL,
  `votos` INT NOT NULL,
  `media_votos` DOUBLE NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliografia`.`genero`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliografia`.`genero` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(25) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliografia`.`filme_has_genero`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliografia`.`filme_has_genero` (
  `idfilme` INT NOT NULL,
  `idgenero` INT NOT NULL,
  PRIMARY KEY (`idfilme`, `idgenero`),
  INDEX `fk_filmes_has_generos_generos1_idx` (`idgenero` ASC),
  INDEX `fk_filmes_has_generos_filmes1_idx` (`idfilme` ASC),
  CONSTRAINT `fk_filmes_has_generos_filmes1`
    FOREIGN KEY (`idfilme`)
    REFERENCES `bibliografia`.`filme` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_filmes_has_generos_generos1`
    FOREIGN KEY (`idgenero`)
    REFERENCES `bibliografia`.`genero` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliografia`.`produtora`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliografia`.`produtora` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(30) NOT NULL,
  `idcidade_sede` INT NOT NULL,
  `site` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_produtora_cidade1_idx` (`idcidade_sede` ASC),
  CONSTRAINT `fk_produtora_cidade1`
    FOREIGN KEY (`idcidade_sede`)
    REFERENCES `bibliografia`.`cidade` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliografia`.`filme_has_produtora`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliografia`.`filme_has_produtora` (
  `idfilme` INT NOT NULL,
  `idprodutora` INT NOT NULL,
  PRIMARY KEY (`idfilme`, `idprodutora`),
  INDEX `fk_filmes_has_produtora_produtora1_idx` (`idprodutora` ASC),
  INDEX `fk_filmes_has_produtora_filmes1_idx` (`idfilme` ASC),
  CONSTRAINT `fk_filmes_has_produtora_filmes1`
    FOREIGN KEY (`idfilme`)
    REFERENCES `bibliografia`.`filme` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_filmes_has_produtora_produtora1`
    FOREIGN KEY (`idprodutora`)
    REFERENCES `bibliografia`.`produtora` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliografia`.`cidade_has_filme`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliografia`.`cidade_has_filme` (
  `idcidade` INT NOT NULL,
  `idfilme` INT NOT NULL,
  PRIMARY KEY (`idcidade`, `idfilme`),
  INDEX `fk_cidade_has_filmes_filmes1_idx` (`idfilme` ASC),
  INDEX `fk_cidade_has_filmes_cidade1_idx` (`idcidade` ASC),
  CONSTRAINT `fk_cidade_has_filmes_cidade1`
    FOREIGN KEY (`idcidade`)
    REFERENCES `bibliografia`.`cidade` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_cidade_has_filmes_filmes1`
    FOREIGN KEY (`idfilme`)
    REFERENCES `bibliografia`.`filme` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliografia`.`serie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliografia`.`serie` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(30) NOT NULL,
  `em_producao` TINYINT(1) NOT NULL,
  `ultima_temporada` DATE NOT NULL,
  `descricao` VARCHAR(300) NOT NULL,
  `poster` VARCHAR(40) NOT NULL,
  `populariadade` DOUBLE(2,1) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliografia`.`temporada`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliografia`.`temporada` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(30) NOT NULL,
  `numero_epsodios` INT NOT NULL,
  `idserie` INT NOT NULL,
  `data_lancamento` DATE NOT NULL,
  `descricao` VARCHAR(300) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_temporadas_series1_idx` (`idserie` ASC),
  CONSTRAINT `fk_temporadas_series1`
    FOREIGN KEY (`idserie`)
    REFERENCES `bibliografia`.`serie` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliografia`.`produtora_has_serie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliografia`.`produtora_has_serie` (
  `idprodutora` INT NOT NULL,
  `idserie` INT NOT NULL,
  PRIMARY KEY (`idprodutora`, `idserie`),
  INDEX `fk_produtora_has_series_series1_idx` (`idserie` ASC),
  INDEX `fk_produtora_has_series_produtora1_idx` (`idprodutora` ASC),
  CONSTRAINT `fk_produtora_has_series_produtora1`
    FOREIGN KEY (`idprodutora`)
    REFERENCES `bibliografia`.`produtora` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_produtora_has_series_series1`
    FOREIGN KEY (`idserie`)
    REFERENCES `bibliografia`.`serie` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliografia`.`genero_has_serie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliografia`.`genero_has_serie` (
  `idgenero` INT NOT NULL,
  `idserie` INT NOT NULL,
  PRIMARY KEY (`idgenero`, `idserie`),
  INDEX `fk_generos_has_series_series1_idx` (`idserie` ASC),
  INDEX `fk_generos_has_series_generos1_idx` (`idgenero` ASC),
  CONSTRAINT `fk_generos_has_series_generos1`
    FOREIGN KEY (`idgenero`)
    REFERENCES `bibliografia`.`genero` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_generos_has_series_series1`
    FOREIGN KEY (`idserie`)
    REFERENCES `bibliografia`.`serie` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliografia`.`servico_streaming`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliografia`.`servico_streaming` (
  `idservico_streaming` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(30) NOT NULL,
  `site` VARCHAR(50) NULL,
  PRIMARY KEY (`idservico_streaming`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliografia`.`filme_has_servico_streaming`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliografia`.`filme_has_servico_streaming` (
  `idfilme` INT NOT NULL,
  `idservico_streaming` INT NOT NULL,
  PRIMARY KEY (`idfilme`, `idservico_streaming`),
  INDEX `fk_filmes_has_servico_streaming_servico_streaming1_idx` (`idservico_streaming` ASC),
  INDEX `fk_filmes_has_servico_streaming_filmes1_idx` (`idfilme` ASC),
  CONSTRAINT `fk_filmes_has_servico_streaming_filmes1`
    FOREIGN KEY (`idfilme`)
    REFERENCES `bibliografia`.`filme` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_filmes_has_servico_streaming_servico_streaming1`
    FOREIGN KEY (`idservico_streaming`)
    REFERENCES `bibliografia`.`servico_streaming` (`idservico_streaming`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliografia`.`serie_has_servico_streaming`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliografia`.`serie_has_servico_streaming` (
  `idserie` INT NOT NULL,
  `idservico_streaming` INT NOT NULL,
  PRIMARY KEY (`idserie`, `idservico_streaming`),
  INDEX `fk_series_has_servico_streaming_servico_streaming1_idx` (`idservico_streaming` ASC),
  INDEX `fk_series_has_servico_streaming_series1_idx` (`idserie` ASC),
  CONSTRAINT `fk_series_has_servico_streaming_series1`
    FOREIGN KEY (`idserie`)
    REFERENCES `bibliografia`.`serie` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_series_has_servico_streaming_servico_streaming1`
    FOREIGN KEY (`idservico_streaming`)
    REFERENCES `bibliografia`.`servico_streaming` (`idservico_streaming`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliografia`.`ator`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliografia`.`ator` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(60) NOT NULL,
  `biografia` VARCHAR(200) NOT NULL,
  `popularidade` DOUBLE(2,1) NOT NULL,
  `foto` VARCHAR(70) NOT NULL,
  `data_nascimento` DATE NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliografia`.`elenco_filme`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliografia`.`elenco_filme` (
  `idator` INT NOT NULL,
  `idfilme` INT NOT NULL,
  PRIMARY KEY (`idator`, `idfilme`),
  INDEX `fk_atores_has_filmes_filmes1_idx` (`idfilme` ASC),
  INDEX `fk_atores_has_filmes_atores1_idx` (`idator` ASC),
  CONSTRAINT `fk_atores_has_filmes_atores1`
    FOREIGN KEY (`idator`)
    REFERENCES `bibliografia`.`ator` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_atores_has_filmes_filmes1`
    FOREIGN KEY (`idfilme`)
    REFERENCES `bibliografia`.`filme` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliografia`.`serie_elenco`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliografia`.`serie_elenco` (
  `idserie` INT NOT NULL,
  `idator` INT NOT NULL,
  PRIMARY KEY (`idserie`, `idator`),
  INDEX `fk_series_has_atores_atores1_idx` (`idator` ASC),
  INDEX `fk_series_has_atores_series1_idx` (`idserie` ASC),
  CONSTRAINT `fk_series_has_atores_series1`
    FOREIGN KEY (`idserie`)
    REFERENCES `bibliografia`.`serie` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_series_has_atores_atores1`
    FOREIGN KEY (`idator`)
    REFERENCES `bibliografia`.`ator` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliografia`.`producao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliografia`.`producao` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(30) NOT NULL,
  `cargo` VARCHAR(45) NOT NULL,
  `foto` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliografia`.`filme_has_producao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliografia`.`filme_has_producao` (
  `idfilme` INT NOT NULL,
  `idproducao` INT NOT NULL,
  PRIMARY KEY (`idfilme`, `idproducao`),
  INDEX `fk_filmes_has_producao_producao1_idx` (`idproducao` ASC),
  INDEX `fk_filmes_has_producao_filmes1_idx` (`idfilme` ASC),
  CONSTRAINT `fk_filmes_has_producao_filmes1`
    FOREIGN KEY (`idfilme`)
    REFERENCES `bibliografia`.`filme` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_filmes_has_producao_producao1`
    FOREIGN KEY (`idproducao`)
    REFERENCES `bibliografia`.`producao` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliografia`.`producao_has_serie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliografia`.`producao_has_serie` (
  `idproducao` INT NOT NULL,
  `idserie` INT NOT NULL,
  PRIMARY KEY (`idproducao`, `idserie`),
  INDEX `fk_producao_has_series_series1_idx` (`idserie` ASC),
  INDEX `fk_producao_has_series_producao1_idx` (`idproducao` ASC),
  CONSTRAINT `fk_producao_has_series_producao1`
    FOREIGN KEY (`idproducao`)
    REFERENCES `bibliografia`.`producao` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_producao_has_series_series1`
    FOREIGN KEY (`idserie`)
    REFERENCES `bibliografia`.`serie` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliografia`.`epsodio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliografia`.`epsodio` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `temporada` INT NOT NULL,
  `nome` VARCHAR(30) NOT NULL,
  `descricao` VARCHAR(300) NOT NULL,
  `popularidade` DOUBLE(2,1) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_epsodio_temporadas1_idx` (`temporada` ASC),
  CONSTRAINT `fk_epsodio_temporadas1`
    FOREIGN KEY (`temporada`)
    REFERENCES `bibliografia`.`temporada` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibliografia`.`serie_has_cidade`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bibliografia`.`serie_has_cidade` (
  `idserie` INT NOT NULL,
  `idcidade` INT NOT NULL,
  PRIMARY KEY (`idserie`, `idcidade`),
  INDEX `fk_series_has_cidade_cidade1_idx` (`idcidade` ASC),
  INDEX `fk_series_has_cidade_series1_idx` (`idserie` ASC),
  CONSTRAINT `fk_series_has_cidade_series1`
    FOREIGN KEY (`idserie`)
    REFERENCES `bibliografia`.`serie` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_series_has_cidade_cidade1`
    FOREIGN KEY (`idcidade`)
    REFERENCES `bibliografia`.`cidade` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
